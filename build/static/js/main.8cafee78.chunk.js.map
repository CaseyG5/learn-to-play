{"version":3,"sources":["components/sections/header/NavBar.js","components/Header.js","components/pages/ContactPage.js","components/PlanInfo.js","components/ProfileText.js","components/ProfileEditForm.js","supabaseClient.js","components/pages/DashboardPage.js","components/FindResources.js","components/ReadyBegin.js","components/FindBuddy.js","components/SearchForm.js","components/ResultRow.js","components/ResultsTable.js","components/pages/ResultsPage.js","components/LoginForm.js","components/pages/LoginPage.js","components/sections/auth/RegistrationForm.js","components/sections/auth/RegistrationMessage.js","components/pages/RegistrationPage.js","components/pages/HomePage.js","App.js","index.js"],"names":["NavBar","page","setPage","className","onClick","size","Header","ContactPage","PlanInfo","ProfileText","member","setEditing","name","about","location","instruments","ProfileEditForm","setMember","updateProfile","useRef","console","log","current","value","onSubmit","evt","preventDefault","updates","htmlFor","type","ref","autoComplete","supabase","createClient","process","DashboardPage","setLoggedIn","useState","editing","a","from","upsert","returning","ignoreDuplicates","upsertError","alert","description","message","auth","signOut","soError","error","FindResources","handleSearch","queryTerms","event","disabled","placeholder","ReadyBegin","FindBuddy","SearchForm","ResultRow","imgURL","vidTitle","vidID","vidDesc","vidURL","src","width","alt","href","target","ResultsTable","content","undefined","id","title","desc","img","rows","i","push","ResultsPage","data","query","LoginForm","handleLogin","email","password","LoginPage","typedEmail","typedPassword","signIn","user","session","signInError","RegistrationForm","props","newUser","addUser","RegistrationMessage","RegistrationPage","regMsg","createNewUser","userObj","signUp","user1","signupError","API_KEY","YOUTUBE_DATA_KEY","HomePage","videos","setVideos","loggedIn","searchWords","setSearchWords","searchTerms","replaceAll","API_URL","axios","get","catch","response","status","getVideos","App","exact","path","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8cafee78.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport {FaHome, FaUserCircle} from \"react-icons/fa\";\r\n\r\nconst NavBar = ( {page, setPage} ) => {\r\n    let x;\r\n\r\n    return (\r\n      <div className=\"my-4 px-4 flex justify-between\">\r\n          <button onClick={ () => {\r\n              setPage(\"home\");\r\n          }}>\r\n              { < FaHome size={30}/> }\r\n          </button>\r\n          <button onClick={ () => {\r\n              setPage(\"dashboard\");\r\n          }}>\r\n              { < FaUserCircle size={30}/> }\r\n          </button>\r\n      </div>\r\n    );\r\n};\r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n// <div className={\"flex space-x-2\"}>\r\n//     <Link to=\"/\">Home</Link>\r\n//     <Link to=\"/about\">About</Link>\r\n//     {/* Dashboard should only show for the use on */}\r\n//     <Link to=\"/dashboard\">Dashboard</Link>\r\n//     <Link to=\"/login\">Login</Link>\r\n//     {/* this and the above should switch btw state */}\r\n//     <Link to=\"/profile\">My Account</Link>\r\n//     <Link to=\"/registration\">Register</Link>\r\n// </div>\r\n\r\n// <div className=\"w-96 px-6 py-3 flex justify-end\">\r\n//\r\n//         <div className=\"w-1/3 flex justify-end\">\r\n//             {/*<Link to=\"/login\">Login</Link>*/}\r\n//             {/*<Link to=\"/registration\">Register</Link>*/}\r\n//         </div>\r\n//\r\n//     </div>","import { useState } from \"react\";\nimport NavBar from \"./sections/header/NavBar\";\nimport Profile from \"./sections/header/Profile\";\n\nexport default function Header() {\n\n  return (\n    <div className={\"h-32 flex justify-center bg-gray-500\"}>\n\n    </div>\n  );\n};\n\n\n","import { useRef, useState } from \"react\";\n// import {useParams} from 'react-router-dom';\n\n/**\n * @author: debp\n */\nfunction ContactPage({ page }) {\n  // const {name} = useParams();\n  // since we have this form, we can collect it's value\n  //see this for more of Ref: https://bit.ly/3zqey1l\n  // const [email, setEmail] = useState(\"\");\n  // const [content, setContent] = useState(\"\");\n\n  // here's the alternative\n  const email = useRef();\n  const content = useRef();\n\n  // const mailjet = require ('node-mailjet')\n  // .connect('40f54eca85c3e9432e96b35280024b14', '050d653646a3c8c42d2aa5bacc8889af')\n  // const request = mailjet\n  // .post(\"send\", {'version': 'v3.1'})\n  // .request({\n  //   \"Messages\":[\n  //     {\n  //       \"From\": {\n  //         \"Email\": \"nwasporter70@gmail.com\",\n  //         \"Name\": \"Nancy\"\n  //       },\n  //       \"To\": [\n  //         {\n  //           \"Email\": \"nwasporter70@gmail.com\",\n  //           \"Name\": \"Nancy\"\n  //         }\n  //       ],\n  //       \"Subject\": \"Greetings from Boston.\",\n  //       \"TextPart\": \"My first Mailjet email\",\n  //       \"HTMLPart\": \"<h3>Dear passenger 1, welcome to <a href='https://www.mailjet.com/'>Mailjet</a>!</h3><br />May the delivery force be with you!\",\n  //       \"CustomID\": \"AppGettingStartedTest\"\n  //     }\n  //   ]\n  // })\n  // request\n  //   .then((result) => {\n  //     console.log(result.body)\n  //   })\n  //   .catch((err) => {\n  //     console.log(err.statusCode)https://bit.ly/3gCDFqm\n  //   })\n  //   }\n\n  const handleSumbit = (event) => {\n    // where the submit logic goes\n    // we sent , we can use this https://bit.ly/3gCDFqm\n    // based on what we have from above, we can get the values of the form as:\n\n    const newEmail = email.current.value;\n    const newContent = content.current.value;\n\n    ////.. other logic\n    // this we send using the link above\n  };\n  return (\n    <>\n      {/* The function we sent this form to for other details */}\n      <form onSubmit={handleSumbit}>\n        {/* the form elements here */}\n        {/* ...such as... */}\n        <input\n          type=\"email\"\n          ref={email}\n          className=\"border-2 outline-none block w-full\"\n          placeholder=\"Your Email\"\n        />\n        <textarea\n          ref={content}\n          className=\"border-2 outline-none w-full\"\n          placeholder=\"Your Message\"\n        ></textarea>\n\n        <input\n          type=\"submit\"\n          value=\"Send\"\n          className=\"block w-32 m-auto bg-green-400\"\n        />\n      </form>\n    </>\n  );\n}\nexport default ContactPage;\n","\r\nexport default function PlanInfo() {\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <h3 className=\"font-bold underline\">Your practice plan:</h3>\r\n            <p className=\"my-1\"><strong>Instrument: &nbsp;</strong> electric guitar</p>\r\n            <p className=\"my-1\"><strong>Session: &nbsp;</strong> 1 short hour</p>\r\n            <p className=\"my-1\"><strong>Days: &nbsp;</strong> SUN thru THURS</p>\r\n            <p className=\"my-1\">You practiced 5 hours last week, that's great!</p>\r\n            <p className=\"mt-12 text-sm\"><em>&ldquo;A journey of 1,000 miles begins with a single step.&rdquo;</em></p>\r\n        </div>\r\n    );\r\n}","import PlanInfo from './PlanInfo';\r\n\r\nexport default function ProfileText ( { member, setEditing } ) {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className={\"mb-4 font-semibold text-lg text-center\"}>Hi {member.name},\r\n                welcome.</h3>\r\n            <p><strong><u>Your details:</u></strong> &nbsp;</p>\r\n            <p className=\"my-1\"><strong>About: &nbsp;</strong> {member.about}</p>\r\n            <p className=\"my-1\"><strong>Location: &nbsp;</strong> {member.location}</p>\r\n            <p className=\"my-1\"><strong>Instrument(s): &nbsp;</strong> {member.instruments}</p>\r\n            <p className=\"my-1\"><strong>Acct status: &nbsp;</strong> active</p>\r\n            <p className=\"my-1\"><strong>Date joined: &nbsp;</strong> Jan 1st 2000</p>\r\n            <p className=\"my-1\"><strong>Last login: &nbsp;</strong> Nov 11 2025</p>\r\n\r\n            <PlanInfo />\r\n\r\n            <div className=\"flex flex-col items-center\">\r\n                <button className=\"w-32 h-8 my-4 border border-black rounded-md bg-purple-300 font-bold\" onClick={() => {\r\n                    setEditing(true);\r\n                }}>Edit profile\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n//{member.lastLogin ? \" back.\" : \".\"}","import { useState, useRef } from 'react';\r\n\r\nexport default function ProfileEditForm ( { member, setMember, updateProfile, setEditing } ) {\r\n    // const [name, setName] = useState(member.name);\r\n    // const [about, setAbout] = useState(member.about);\r\n    // const [location, setLocation] = useState(member.location);\r\n    // const [instruments, setInstruments] = useState(member.instruments);\r\n\r\n    const name = useRef(`${member.name}`);\r\n    const about = useRef(member.about);\r\n    const location = useRef(member.location);\r\n    const instruments = useRef(member.instruments);\r\n\r\n    console.log(member.name + \" - \" + member.about + \" - \" + member.location);\r\n    console.log( name + \" - \" + name.current + \" - \" + name.current.value  );\r\n\r\n    const handleUpdate = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const updates = {\r\n            name: name.current.value,\r\n            about: about.current.value,\r\n            location: location.current.value,\r\n            instruments: instruments.current.value\r\n        };\r\n\r\n        setMember( updates );\r\n        updateProfile( updates );\r\n\r\n        setEditing(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"mb-72 flex flex-col\" onSubmit={handleUpdate}>\r\n            <h3 className={\"mb-4 font-semibold text-lg text-center\"}>Enter your changes below.</h3>\r\n            <p><strong><u>Info to update:</u></strong> &nbsp;</p>\r\n            <label className=\"my-0.5 flex justify-between\" htmlFor=\"name\">\r\n                <strong>Name:</strong> &nbsp;<input className=\"w-56 border border-black rounded-sm\" type=\"text\" name=\"name\" ref={name} autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"my-0.5 flex justify-between\" htmlFor=\"about\">\r\n                <strong>About:</strong> &nbsp;<input className=\"w-56 border border-black rounded-sm\" type=\"text\" name=\"about\" ref={about} autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"my-0.5 flex justify-between\" htmlFor=\"location\">\r\n                <strong>Location:</strong> &nbsp;<input className=\"w-56 border border-black rounded-sm\" type=\"text\" name=\"location\" ref={location} autoComplete=\"off\" />\r\n            </label>\r\n            <label className=\"mt-0.5 flex justify-between\" htmlFor=\"instruments\">\r\n                <strong>Instruments:</strong> &nbsp;<input className=\"w-56 border border-black rounded-sm\" type=\"text\" name=\"instruments\" ref={instruments} autoComplete=\"off\" />\r\n            </label>\r\n\r\n            <div className=\"mt-6 mb-3.5 flex justify-around\">\r\n                <button className=\"w-32 h-8  border border-black rounded-md bg-green-300 font-bold\" type=\"submit\">Change</button>\r\n\r\n                <button className=\"w-32 h-8 border border-black rounded-md bg-red-300 font-bold\" onClick={() => {\r\n                    setEditing(false);\r\n                }}>Cancel\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n// onChange={ (evt) => {  setName(evt.target.value); }}","import { createClient } from '@supabase/supabase-js';\r\nimport { SupabaseClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\nconst supabaseServKey = process.env.REACT_APP_SUPABASE_SERV_KEY;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseServKey);\r\n\r\nexport default supabase;\r\n\r\n// Config: {\r\n//     schema: \"public\",\r\n// }","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport ProfileText from '../ProfileText';\r\nimport ProfileEditForm from '../ProfileEditForm';\r\nimport supabase from '../../supabaseClient';\r\nimport { FaSignOutAlt} from \"react-icons/fa\";\r\n\r\nfunction DashboardPage( { member, setMember, setLoggedIn } ) {\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    const updateProfile = async ( updates ) => {\r\n        try {\r\n            const {upsertError} = await supabase.from('members').upsert(updates, {\r\n                returning: \"minimal\",\r\n                ignoreDuplicates: true,\r\n            });\r\n            if (upsertError) throw upsertError;\r\n        } catch (e) {\r\n            alert(e.description || e.message );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-between\">\r\n            <div className=\"\">\r\n                <h3 className=\"mb-6 text-center text-xl font-bold\">Profile</h3>\r\n\r\n\r\n                {editing ?\r\n                    <ProfileEditForm member={member} setMember={setMember} updateProfile={updateProfile}\r\n                                     setEditing={setEditing}/> :\r\n                    <ProfileText member={member} setEditing={setEditing}/>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"flex justify-center\">\r\n                <button className=\" flex\" onClick={ async () => {\r\n                    const {soError} = await supabase.auth.signOut();\r\n                    if(soError) alert(error.description || error.message);\r\n                    setLoggedIn(false);\r\n                }}>{\"Log out\"} &nbsp; {<FaSignOutAlt size={30}/>} </button>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\nexport default DashboardPage;\r\n\r\n\r\n\r\n/* ALTERNATIVE IDEA: USE 1 BUTTON and TOGGLE FUNCTIONS\r\n\r\n        <button className=\"\" onClick={ () => {\r\n                // toggle editing, then\r\n                // if !editing updateProfile()\r\n            } }>\r\n                { !editing ?\r\n                    \"Edit profile\" :\r\n                    \"Accept changes\"\r\n                }\r\n        </button>\r\n */","import { useRef } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nexport default function FindResources( { handleSearch } ) {\r\n\r\n    const queryTerms = useRef();            // OR use setSearchTerm(event.target.value);\r\n\r\n    const submitSearch = (event) => {\r\n        event.preventDefault();\r\n        if(queryTerms.current.value === \"\") {\r\n            console.log(\"Nothing to search for\");\r\n            return;\r\n        }\r\n\r\n        handleSearch(queryTerms.current.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <form className=\"mb-6 flex flex-col items-center\" onSubmit={ submitSearch }  >\r\n            <span className=\"font-bold underline\">Search for sheets/lessons</span>\r\n            <div className=\"my-4 flex flex-col\">\r\n                <label htmlFor=\"videos\">\r\n                    <input type=\"checkbox\" name=\"videos\" />\r\n                    &nbsp;Video lessons\r\n                </label>\r\n                <label htmlFor=\"tabs\">\r\n                    <input type=\"checkbox\" name=\"tabs\" disabled />\r\n                    &nbsp;Tablature\r\n                </label>\r\n                <label htmlFor=\"trad-sheet\" >\r\n                    <input type=\"checkbox\" name=\"trad-sheet\" disabled/>\r\n                    &nbsp;Traditional sheet\r\n                </label>\r\n            </div>\r\n            <label className=\"\" htmlFor=\"skill-level\">\r\n                Choose skill level:\r\n            </label>\r\n            <select className=\"border\" name=\"skill-level\" disabled>\r\n                <option value=\"\">any</option>\r\n                <option value=\"\">Just starting</option>             { /* Jumping in cold */ }\r\n                <option value=\"\">Beginner-Intermediate</option>     { /* Getting warmed up */ }\r\n                <option value=\"\">Intermediate-Advanced</option>     { /* Feeling comfortable */ }\r\n            </select>\r\n\r\n            <div className=\"mt-6 flex\">\r\n                <input className=\"w-64 border px-3 focus:outline-none\" ref={queryTerms} type=\"text\" placeholder=\"blues guitar\" />\r\n                <button className=\"w-20 rounded-r bg-yellow-300 flex justify-center items-center\" type={\"submit\"}>{ <FaSearch/> }</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n","\r\n\r\nconst ReadyBegin = ( {setPage} ) => {\r\n\r\n    const goToPracticePlan = (evt) => {\r\n        evt.preventDefault();\r\n        setPage(\"practice\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"mb-6 flex flex-col items-center\" onSubmit={goToPracticePlan}>\r\n            <h3 className=\"font-bold underline\">Ready to progress?</h3>\r\n            <h4 className=\"text-md\">Set a goal and make a plan.</h4>\r\n            <input type=\"submit\" value=\"Begin\" className=\"w-20 mt-4 rounded bg-green-300 cursor-pointer\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ReadyBegin;","import { FaSearch } from 'react-icons/fa';\r\n\r\nconst FindBuddy = ( {setPage} ) => {\r\n\r\n    const goToBuddySearch = (evt) => {\r\n        evt.preventDefault();\r\n        setPage(\"partner\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"mb-6 flex flex-col items-center\" onSubmit={goToBuddySearch}>\r\n            <h3 className=\"font-bold underline\">Already practicing?</h3>\r\n            <h4 className=\"text-md\">Find a practice partner or</h4>\r\n            <h4 className=\"text-md\">accountability buddy.</h4>\r\n            <button type={\"submit\"} className=\"w-20 h-6 mt-4 rounded bg-blue-400 flex justify-center items-center\" >{ <FaSearch /> }</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FindBuddy;","import FindResources from \"./FindResources\";\r\nimport ReadyBegin from \"./ReadyBegin\";\r\nimport FindBuddy from \"./FindBuddy\";\r\n\r\nconst SearchForm = ( {handleSearch, setPage} ) => {\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            <h1 className=\"p-2 text-3xl font-bold bg-indigo-100\">L2P logo</h1>\r\n            <h2 className=\"text-xl\">Learn to Play</h2>\r\n            <h3 className=\"mb-8 text-xl\">ANY instrument</h3>\r\n            <FindResources handleSearch={handleSearch}/>\r\n            <ReadyBegin setPage={setPage}/>\r\n            <FindBuddy setPage={setPage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchForm;","import {Link} from 'react-router-dom';\r\n\r\nexport default function ResultRow( { imgURL, vidTitle, vidDesc, vidID }) {\r\n    const vidURL = `https://www.youtube.com/watch?v=${vidID}`\r\n    return (\r\n        <tr>\r\n            <td>{<img src={imgURL} width=\"550\" alt=\"thumbnail\"/>}</td>\r\n            <td className=\"pl-8 py-2 text-blue-600 underline\">{<a href={vidURL} target=\"_blank\">{vidTitle}</a>}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// target=\"_blank\"\r\n// rel=\"noopener noreferrer\"\r\n\r\n\r\n// <td>{imgURL}</td>\r\n// <td>{vidURL}{''}{vidTitle}</td>\r\n// <td>{vidDesc}</td>\r\n//\r\n// <td>{<span className=\"text-sm\">{vidDesc}</span>}</td>","import ResultRow from './ResultRow';\r\n\r\nexport default function ResultsTable( { content } ) {\r\n    if( content[0] === undefined) {\r\n        console.log(\"didn't get the data in time\");\r\n        return <div>Nothing to show</div>;\r\n    };\r\n\r\n    let id= \"\";\r\n    let title = \"\";\r\n    let desc = \"\";\r\n    let img = \"\";\r\n    let rows = [];\r\n\r\n    for(let i=0; i<6; i++ ) {\r\n        id = content[i][\"id\"][\"videoId\"];  // e.g. \"VlwkuB4Rm0E\"\r\n        title = content[i][\"snippet\"][\"title\"];  // e.g. \"Turnaround Blues Guitar Lesson\"\r\n        desc = content[i][\"snippet\"][\"description\"];  // \"Guitar Lesson for 12 bar blues turnaround\"\r\n        img = content[i][\"snippet\"][\"thumbnails\"][\"medium\"][\"url\"];  // \"https://i.ytimg.com/vi/VlwkuB4Rm0E/default.jpg\"\r\n        rows.push(<ResultRow imgURL={img} vidTitle={title} vidDesc={desc} vidID={id} key={id} />);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <table>\r\n            <tbody>{rows}</tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\n\r\n// FOR EXAMPLE\r\n// id = \"VlwkuB4Rm0E\"\r\n// title = \"Turnaround Blues Guitar Lesson\"\r\n// desc = \"Guitar Lesson for 12 bar blues turnaround\"\r\n// img = \"https://i.ytimg.com/vi/VlwkuB4Rm0E/default.jpg\"","import axios from 'axios';\r\nimport ResultsTable from '../ResultsTable';\r\n\r\n// This page will display the search results from the request via the YouTube Data API\r\n\r\n// Authorization: Bearer [YOUR_ACCESS_TOKEN]\r\n// Accept: application/json\r\n\r\n// use 'list' operation to GET a list of 0+ resources\r\n// the 'part' parameter to select only the resource components which are needed\r\n// the 'fields' parameter filters the API response, containing the resource parts identified with 'part'\r\n\r\nconst ResultsPage = ( {data, query} ) => {\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h3 className=\"font-bold underline\">Showing search results:</h3>\r\n            <h4 className=\"mb-6 text-md\">videos for: <em>{ query }</em></h4>\r\n            <ResultsTable content={data}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;\r\n\r\n","import { useRef } from 'react';\r\n\r\nexport default function LoginForm( {handleLogin} ) {\r\n\r\n    const email = useRef();\r\n    const password = useRef();\r\n\r\n    const loginSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(email.current.value === \"\" || password.current.value === \"\") return;\r\n        handleLogin(email.current.value, password.current.value);\r\n        email.current.value = \"\";\r\n        password.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={loginSubmit} className=\"w-80 my-8 flex flex-col items-center justify-between\">\r\n                <label htmlFor=\"email\" className=\"w-full mb-4 flex flex-col items-center\">\r\n                    <input name=\"email\" type=\"text\" ref={email} className=\"w-64 border-2\" autoComplete=\"off\"/>\r\n                    <span className=\"text-sm\">Email</span>\r\n                </label>\r\n                <label htmlFor=\"password\" className=\"w-full flex flex-col items-center\">\r\n                    <input name=\"password\" type=\"password\" ref={password} className=\"w-64 border-2\" autoComplete=\"off\"/>\r\n                    <span className=\"text-sm\">Password</span>\r\n                </label>\r\n\r\n                <input type=\"submit\"\r\n                       value=\"Login\"\r\n                       className=\"w-32 h-8 mt-6 border border-black rounded-md bg-blue-300 font-bold\"  />\r\n            </form>\r\n        </>\r\n    );\r\n}","\nimport supabase from '../../supabaseClient';\nimport { useState } from \"react\";\nimport Config from '../../Config'\nimport LoginForm from '../LoginForm';\nimport { Link } from 'react-router-dom';\n\n\nfunction LoginPage( {setMember, setLoggedIn, setPage} ) {\n    const [name, setName] = useState( \"\" );\n    // const [location, setLocation] = useState( {} )\n    // const [instruments, setInstruments] = useState( {} );\n    // const [about, setAbout] = useState( \"\" );\n    // const [acctStatus, setAcctStatus] = useState( \"\" );\n    // const [dateJoined, setDateJoined] = useState( null );\n    // const [lastLogin, setLastLogin] = useState( null)\n\n\n    const handleLogin = async (typedEmail, typedPassword) => {\n\n        try {\n            // // const user = supabase.auth.user();\n            const { user, session, signInError } = await supabase.auth.signIn({\n                email: typedEmail,\n                password: typedPassword\n            })\n            if (signInError) throw signInError;\n            console.log(user);\n            const theirID = user.id;\n            // let { data: members, selectError } = await supabase\n            //     .from('members')\n            //     .select(`*, auth.users (id) `);\n            // const { data, selectError, status } = await supabase.from('members')\n            //                                                     .select('name')\n            //                                                     .eq('id', theirID)\n            //                                                     .single();\n\n            // if (selectError) throw selectError;\n            //console.log( data );\n\n            // const {data, error, status} = await supabase.from('members')\n            //                             .select('userID, name, created_at')\n            //                             .eq('email', typedEmail)\n            //                             .eq('password', typedPassword)\n            //                             .single();\n            //\n            // if (error && status !== 406) throw error;\n            // if (data) {\n            //     // update states? to display name, location, about, etc.\n            //     console.log(data);\n            //     console.log(data.userID + \" - \" + data.name + \" - joined on \" + data.created_at);\n            //     // setName(data.name);\n            //     // setLocation(data.location);\n            //     // setDateJoined(data.dateJoined);\n            // console.log(\"Sign in successful\");\n            setMember( {\n                name: \"Casey Geist\",        // data.name\n                location: \"Boston, MA, USA\",   // data.location\n                about: \"developer & musician\",  // data.about\n                instruments: \"guitar, piano\"  // data.instruments\n            } )\n\n            setLoggedIn(true);\n                //console.log(\"User \" + data.name + \" logged in\");\n            //}\n        } catch (e) {\n            alert(e.description || e.message);\n        }\n\n    };\n\n    return (\n        <div className=\"flex flex-col items-center\">\n            <h1 className=\"my-8 p-2 text-3xl font-bold bg-indigo-100\">L2P logo</h1>\n            <h2 className=\"text-xl\">Please log in to continue.</h2>\n            <LoginForm handleLogin={handleLogin} />\n            <span>Haven't yet joined? Register <button className=\"text-blue-500 underline\" onClick={ () => {\n                setPage(\"register\");\n            }}>here</button>.</span>\n        </div>\n    );\n};\n\nexport default LoginPage;\n\n\n// 403 - access denied\n// 404 - not found\n// 406 - not acceptable","import { useState, useRef } from \"react\";\n\nfunction RegistrationForm(props) {\n  //const [register, setRegister] = useState();  //?\n\n  const name = useRef();\n  const email = useRef();\n  const password = useRef();\n\n  // this is the handler for the form\n  const handleSubmit = (evt) => {\n    // this is the event that will be sent up\n      evt.preventDefault();\n\n      // ensure no fields left blank\n      if( name.current.value === \"\" || email.current.value === \"\" || password.current.value === \"\" ) return;\n\n      let newUser = {};\n      newUser.name = name.current.value;\n      newUser.email = email.current.value;\n      newUser.password = password.current.value;\n\n      name.current.value = \"\";\n      email.current.value = \"\";\n      password.current.value = \"\";\n\n      props.addUser(newUser);\n  };\n  return (\n    <form onSubmit={handleSubmit}  className=\"w-80 my-8 flex flex-col items-center justify-between\">\n        <label htmlFor=\"name\" className=\"w-full mb-4 flex flex-col items-center\">\n            <input name=\"name\" type=\"text\" ref={name} className=\"w-64 border-2\" autoComplete=\"off\"/>\n            <span className=\"text-sm\">Name</span>\n        </label>\n        <label htmlFor=\"email\" className=\"w-full mb-4 flex flex-col items-center\">\n            <input name=\"email\" type=\"text\" ref={email} className=\"w-64 border-2\" autoComplete=\"off\"/>\n            <span className=\"text-sm\">Email</span>\n        </label>\n        <label htmlFor=\"password\" className=\"w-full flex flex-col items-center\">\n            <input name=\"password\" type=\"password\" ref={password} className=\"w-64 border-2\" autoComplete=\"off\"/>\n            <span className=\"text-sm\">Password</span>\n        </label>\n        <input type=\"submit\" value=\"Register\"\n               className=\"w-32 h-8 mt-6 border border-black rounded-md bg-green-300 font-bold\" />\n    </form>\n  );\n}\n\nexport default RegistrationForm;\n","function RegistrationMessage(props) {\n  return (\n    <div>\n      <h1 className=\"text-xl text-center\">{props.message}</h1>\n    </div>\n  );\n}\n\nexport default RegistrationMessage;\n","import {useState} from \"react\";\r\nimport supabase from \"../../supabaseClient\";    // connect to supabase via api\r\nimport RegistrationForm from \"../sections/auth/RegistrationForm\";\r\nimport RegistrationMessage from \"../sections/auth/RegistrationMessage\";\r\n\r\n\r\n\r\nconst RegistrationPage = ( {setPage} ) => {\r\n    const [regMsg, setRegMsg] = useState(\"Please join the community to continue.\");\r\n\r\n    const createNewUser = async (userObj) => {\r\n        try {\r\n            const { user1, session, signupError } = await supabase.auth.signUp( {\r\n                email: userObj.email,\r\n                password: userObj.password\r\n            });\r\n            if (signupError) throw signupError;\r\n\r\n            // then how to add name to 'members' table using 'auth' table and 'id' or uuid???\r\n            // CURRENTLY GET 403 - access forbidden\r\n            // const { data, upsertError } = await supabase.from('members').insert( [\r\n            //     { name: userObj.name }\r\n            // ]);\r\n            //\r\n            // if( upsertError ) throw upsertError;\r\n            // console.log(data);\r\n            // console.log(user);\r\n            // console.log(\"User \" + user2.name + \" registered\");\r\n            // setRegMsg(`${user} has joined the community!`);\r\n\r\n        } catch(error) {\r\n            alert(error.description || error.message);\r\n        }\r\n\r\n    };\r\n\r\n  // let rowID = 0;\r\n  // let nextID = 1000;\r\n  //\r\n  // const getNextID = async () => {\r\n  //   await axios.get(Config.API_URL).then( resp => {\r\n  //     rowID = resp.data.total + 2;\r\n  //     nextID += rowID;\r\n  //   });\r\n  //\r\n  //   console.log(`next user id will be: ${nextID}`);\r\n  // }\r\n  //\r\n\r\n  //   console.log(\"attempting to add:\\n\");\r\n  //   for(let key in userObj) {\r\n  //     console.log( key.valueOf() + \"\\n\");\r\n  //   }\r\n  //\r\n  //   // you can use the async/await here, it's a fit\r\n  //   const response = await axios.post(Config.API_URL, userObj).catch( error => {\r\n  //     console.log(error);\r\n  //   });\r\n  //   console.log(response);\r\n\r\n\r\n\r\n  //getNextID();\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <h1 className=\"my-8 p-2 text-3xl font-bold bg-indigo-100\">L2P logo</h1>\r\n      <RegistrationMessage message={regMsg}  />\r\n      <RegistrationForm addUser={createNewUser}    />\r\n      <span>Already joined? Log in <button className=\"text-blue-500 underline\" onClick={ () => {\r\n          setPage(\"login\");\r\n      }} >here</button>.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n\r\n\r\n// const [loading, setLoading] = useState(true);\r\n// const [username, setUsername] = useState(null);\r\n// const [website, setWebsite] = useState(null);\r\n// const [avatar_url, setAvatarUrl] = useState(null);\r\n//\r\n// useEffect( () => {\r\n//     getProfile();\r\n// }\r\n\r\n// const handleLogin = async (email) => {\r\n//     try {\r\n//         setLoading(true);\r\n//         const { error } = await supabase.auth.signIn( {email} );\r\n//         if (error) throw error;\r\n//         alert('Check yo email for the login link!');\r\n//     } catch (error)  {\r\n//         alert(error.description || error.message);\r\n//     } finally {\r\n//         setLoading(false);\r\n//     }\r\n// }\r\n// async function getProfile() {\r\n//     try {\r\n//         setLoading(true);\r\n//         const user = supabase.auth.user();\r\n//\r\n//         let { data, error, status } = await supabase\r\n//             .from('profiles')\r\n//             .select(`username, website, avatar_url`)\r\n//             .eq('id', user.id)\r\n//             .single();\r\n//\r\n//         if (error && status !== 406) {\r\n//             throw error\r\n//         }\r\n//         if (data) {\r\n//             setUsername(data.username);\r\n//             setWebsite(data.website);\r\n//             setAvatarUrl(data.avatar_url);\r\n//         }\r\n//     } catch (error) {\r\n//         alert(error.message);\r\n//     } finally {\r\n//         setLoading(false);\r\n//     }\r\n// }\r\n//\r\n// async function updateProfile( { username, website, avatar_url } ) {\r\n//     try {\r\n//         setLoading(true);\r\n//         const user = supabase.auth.user()\r\n//\r\n//         const updates = {\r\n//             id: user.id,\r\n//             username,\r\n//             website,\r\n//             avatar_url,\r\n//             updated_at: new Date(),\r\n//         }\r\n//\r\n//         let { error } = await supabase.from('profiles').upsert(updates, {\r\n//             returning: 'minimal'  // don't return value after inserting\r\n//         });\r\n//\r\n//         if (error) {\r\n//             throw error;\r\n//         }\r\n//     } catch (error) {\r\n//         alert(error.message);\r\n//     } finally {\r\n//         setLoading(false);\r\n//     }\r\n// }","\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport SearchForm from '../SearchForm';\nimport ResultsPage from \"./ResultsPage\";\n\nimport LoginPage from \"./LoginPage\";\nimport RegistrationPage from \"./RegistrationPage\";\nimport DashboardPage from \"./DashboardPage\";\nimport PracticePlan from \"./PracticePlan\";\nimport PartnerPage from \"./PartnerPage\";\n\n//@TODO: use in API_URL...  &fields=items(id,snippet)\n\nconst API_KEY = process.env.YOUTUBE_DATA_KEY;\n\nconst HomePage = ( {page, setPage} ) => {\n    const [videos, setVideos] = useState( [] );\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [member, setMember] = useState( {} );\n    const [hasPlan, setHasPlan] = useState(false);           // get value from DB after logged in\n    const [searchWords, setSearchWords] = useState(\"\");\n\n    const execSearch = (query) => {\n        setSearchWords(query);\n        const searchTerms = query.replaceAll(' ', '%2C');\n        console.log(searchTerms);\n\n        // take skill level and check boxes and\n        // use them to build a fetch URL\n        const API_URL = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=6&order=rating&q=${searchTerms}&key=${API_KEY}`;\n\n        // fetch data via YouTube data API\n        const getVideos = async () => {\n            const response = await axios.get(API_URL)\n                .catch( error => console.log(error) );\n\n            console.log(response);\n            setVideos( response[\"data\"][\"items\"] ) ;\n\n            if( response.status === 200 ) {\n                setPage(\"results\");\n            }\n        };\n\n        let promise = getVideos();\n    }\n\n\n    switch(page) {\n        case \"results\":\n            return <ResultsPage data={videos} query={searchWords}/> ;\n        case \"login\":\n            if (!loggedIn) return <LoginPage setMember={setMember} setLoggedIn={setLoggedIn} setPage={setPage}/>;\n            return <DashboardPage member={member} setMember={setMember} setLoggedIn={setLoggedIn} />;\n        case \"dashboard\":\n            if (loggedIn) return <DashboardPage member={member} setMember={setMember} setLoggedIn={setLoggedIn} />;\n            return <LoginPage setMember={setMember} setLoggedIn={setLoggedIn} setPage={setPage} /> ;\n        // case \"practice\":\n        //     if(loggedIn) return <PracticePlan /> ;\n        //     return <LoginPage setLoggedIn={setLoggedIn} /> ;\n        // case \"partner\":\n        //     if(loggedIn && hasPlan) return <PartnerPage /> ;\n        //     return <LoginPage setLoggedIn={setLoggedIn} /> ;\n        case \"register\":\n            return <RegistrationPage setPage={setPage} />;\n        default:\n            return  <SearchForm handleSearch={execSearch} setPage={setPage} />;\n    }\n\n\n\n\n};\n\nexport default HomePage;\n\n\n// users\n// const [changeableVal, setChangeableVal] = useState(initialState)\n\n// const loadMoreMessages = () => {\n// newMessages = fetch(Message)\n// setMessage(newMessages)\n// }\n\n// dataReceived ?\n//     <ResultsPage data={videos} query={searchWords}/> :\n//     <div className=\"flex flex-col items-center\">\n//         <h1 className=\"p-2 text-3xl font-bold bg-indigo-100\">L2P logo</h1>\n//         <h2 className=\"text-xl\">Learn to Play</h2>\n//         <h3 className=\"mb-8 text-xl\">ANY instrument</h3>\n//         <SearchForm handleSearch={execSearch} setLoggedIn={setLoggedIn}/>\n//     </div>","import './App.css';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {useState} from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport AboutPage from \"./components/pages/AboutPage\";\nimport ContactPage from \"./components/pages/ContactPage\";\nimport DashboardPage from \"./components/pages/DashboardPage\";\nimport HomePage from \"./components/pages/HomePage\";\nimport LoginPage from \"./components/pages/LoginPage\";\nimport ProfilePage from \"./components/pages/ProfilePage\";\nimport RegistrationPage from \"./components/pages/RegistrationPage\";\nimport ResultsPage from \"./components/pages/ResultsPage\";\nimport PracticePlan from \"./components/pages/PracticePlan\";\nimport {FaHome, FaUserCircle} from 'react-icons/fa';\nimport SearchForm from \"./components/SearchForm\";\nimport PartnerPage from \"./components/pages/PartnerPage\";\nimport NavBar from \"./components/sections/header/NavBar\"\n\n// - [x] functions\n// - [x] imp. v. declare\n// - [x] ES6 | commonJS\n// - [x] JSx\n\n\n//// ------\n// - [✓] props. | { }\n// - [✓] state\n//   - [ ] Hooks   ,\n//    - [✓] useState ,\n//    - [ ] useEffect\n//    - [ ] async calls\n//    - [ ] `fetch`\n//    - - [ ] 'GET' <\n//    - - [ ] 'POST' <\n//    - - [ ] 'PUT'  <\n//   >>>> [ ] Routing\n//        >>>> Jamstack <<< || LAMP || M[E][X]N\n\n//@TODO: connect YT data api                                        --- DONE\n//@TODO: allow dynamic search with words entered into input field   --- DONE\n//@TODO: search icons for buttons and nav                           --- DONE\n//@TODO: make DB for Docker and connect                             --- SKIPPED\n//@TODO: move DB to Supabase and connect                            --- DONE\n//@TODO: when click Login, check UN & PW, then redirect to Dashboard/Profile --- DONE\n// @TODO: go to profile/dashboard if already logged in              --- OK\n// @TODO: problem...traditional navigation with <Link> tags doesn't work because I can't send a prop to the component/page I'm linking to to update the login status\n//@TODO: update lastLogin upon logging out\n//@TODO: change user icon on dashboard page to logout icon if currently logged in\n\nexport default function App() {\n    const [page, setPage] = useState(\"home\");\n\n    return (\n        <div className=\"bg-gray-500 h-screen\">\n            <Header />\n\n            <div className=\"w-96 h-mobile bg-white p-6  mx-auto rounded\">\n                <NavBar page={page} setPage={setPage}/>\n\n                <Switch>\n                    <Route exact path=\"/\" >\n                        <HomePage page={page} setPage={setPage} />\n                    </Route>\n                </Switch>\n\n            </div>\n\n        </div>\n    );\n}\n// <Route exact path=\"/search\" component={ResultsPage} />\n// <Route exact path=\"/about\" component={AboutPage} />\n// <Route exact path=\"/contact\" component={ContactPage} />\n// <Route exact path=\"/dashboard\" component={DashboardPage} />\n// <Route exact path=\"/profile\" component={ProfilePage} />\n\n/*\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n\n                <Route exact path=\"/dashboard\" >\n                    {loggedIn ?\n                        <DashboardPage member={member} setLoggedIn={setLoggedIn}/> :\n                        <LoginPage setMember={setMember} setLoggedIn={setLoggedIn}/>\n                    }\n                </Route>\n\n                <Route exact path=\"/login\" >\n                    {loggedIn ?\n                        <HomePage /> :\n                        <LoginPage setMember={setMember} setLoggedIn={setLoggedIn}/>\n                    }\n                </Route >\n\n                <Route exact path=\"/registration\" component={RegistrationPage} />\n            </Switch>\n */","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n\n/**\n * -- components\n * --- pages\n * --- [F] search\n *   ----\n *  -----\n * --- [F] user\n *   ---- User..\n * --- [F] auth\n *  --- Login /Register\n * --- buddy\n *  ----\n */"],"sourceRoot":""}